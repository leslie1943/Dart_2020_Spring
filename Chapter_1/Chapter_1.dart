/**
 * Important concepts
 */
// 🚀🚀 1. 所有变量引用的都是【对象】, 每个对象都是一个【类】的实例. 数字 函数以及null都是对象. 所有的类都继承于【Object】类
// 🚀🚀 2. 尽管Dart是强类型语言, 但是在声明变量时指定类型时可选的,因为dart可以进行类型推断.如果想要显示的声明一个不确定的类型，可以使用特殊类型【dynamic】
// 🚀🚀 3. Dart支持泛型, 比如 List<int>:表示一组有int对象组成的列表 或者 List<dynamic> 表示一组由任何对象组成的列表.
// 🚀🚀 4. Dart支持顶级函数【main方法】, 同时还支持属于类或对象的函数(静态方法和实例方法),还可以在函数中定义函数(嵌套或者局部函数)
// 🚀🚀 5. Dart支持顶级变量, 以及定义属于类或对象的变量(静态变量和实例变量). 实例变量又称为【域】或【属性】
// 🚀🚀 6. Dart没有类似于Java那样的 public,protected和private成员访问限定符. 如果一个标识符以下划线【_】开头则表示改标识符是私有的.
// 🚀🚀 7. 标识符可以以字母或者下划线开头,其后可跟字符和数字的组合.abstract
// 🚀🚀 8. Dart中表达式和语句是有区别的, 表达式【有值】而语句【没有值】. 比如条件表达式
//      expression condtion ? expr1 : expr2中含有expr1或expr2
//      if-else 分支语句则没有值. 一个语句通常包含一个或多个表达式, 但是一个表达式不能只包含一个语句
// 🚀🚀 9. Dart工具可以显示 警告和错误两种类型的问题. 警告通常表明代码可能有问题但不会阻止运行. 错误分为编译时错误和运行时错误;编译时错误代码无法运行,运行时错误会在代码运行时导致异常.
